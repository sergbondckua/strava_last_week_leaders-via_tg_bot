import os
from urllib.request import urlopen, urlretrieve
from PIL import (
    Image,
    ImageChops,
    ImageDraw,
    ImageFont
)
from pilmoji import Pilmoji
from fontTools.ttLib import TTFont

import start


def crop_to_circle(im):
    """ –°–æ–∑–¥–∞–µ—Ç –∫—Ä—É–≥–ª—É—é —Ä–∞–º–∫—É –¥–ª—è —Ñ–æ—Ç–æ –∏ –æ–±—Ä–µ–∑–∞–µ—Ç –¥–µ–ª–∞—è –∫—Ä—É–≥–ª–æ–π —Å –æ–±–æ–¥–∫–æ–º (border)"""
    big_size = (im.size[0] * 3, im.size[1] * 3)
    mask = Image.new('L', big_size, 0)
    ImageDraw.Draw(mask).ellipse((0, 0) + big_size, fill=255)
    mask = mask.resize(im.size, Image.Resampling.LANCZOS)
    mask = ImageChops.darker(mask, im.split()[-1])
    im.putalpha(mask)
    border = Image.new("RGBA", big_size, 0)
    ImageDraw.Draw(border).ellipse((0, 0) + big_size,
                                   fill=0, outline="#fff", width=3)
    border = border.resize(im.size, Image.Resampling.LANCZOS)
    im.paste(border, (0, 0), border)


def char_in_font(unicode_char, font):
    """ –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –ª–∏ —à—Ä–∏—Ñ—Ç —Å–∏–º–≤–æ–ª –≤ —Å—Ç—Ä–æ–∫–µ, –µ—Å–ª–∏ –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç True"""
    for cmap in font['cmap'].tables:
        if cmap.isUnicode():
            if ord(unicode_char) in cmap.cmap:
                return False
    return True


def get_poster_leaders(list_data_leaders):
    """ –°–æ–∑–¥–∞–µ—Ç –≥–æ—Ç–æ–≤—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–æ —Å–ø–∏—Å–∫–æ–º –ª–∏–¥–µ—Ä–æ–≤"""

    # –§–æ—Ä–º–∏—Ä—É–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏ –µ–≥–æ —Ñ–æ–Ω
    crossrunche = Image.open(os.path.join(start.BASE_DIR, 'images/crossrunche.png'))
    strava = Image.open(os.path.join(start.BASE_DIR, 'images/strava.png'))
    cup = Image.open(os.path.join(start.BASE_DIR, 'images/cup.png'))
    out = Image.open(os.path.join(start.BASE_DIR, 'images/background.png'))
    out2 = Image.open(os.path.join(start.BASE_DIR, 'images/background2.png'))

    # –ù–∞ —Ñ–æ–Ω out –Ω–∞–∫–ª–∞–¥—ã–≤–∞–µ–º –∑–Ω–∞—á–∫–∏
    out.paste(cup, (130, 150), cup)
    out.paste(crossrunche, (5, 5), crossrunche)
    out.paste(strava, (538, 0), strava)

    # –ù–∞ —Ñ–æ–Ω out –∏ out2 –Ω–∞–∫–ª–∞–¥—ã–≤–∞–µ–º —Ç–µ–∫—Å—Ç
    emoji_text = Pilmoji(out)
    emoji_text2 = Pilmoji(out2)
    ubuntu_font = os.path.join(start.BASE_DIR, 'fonts/Ubuntu-Regular.ttf')
    symbol_font = os.path.join(start.BASE_DIR, 'fonts/Symbola-AjYx.ttf')
    font = ImageFont.truetype(ubuntu_font, size=30)
    emoji_text.text((538, 240), 'üîü\nüîù', font=font)
    shift = 362  # –ù–∞—á–∞–ª—å–Ω–∞—è –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞ —Ç–æ–ø-10 —Å–ø–∏—Å–∫–∞
    shift_2 = 0  # –ù–∞—á–∞–ª—å–Ω–∞—è –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞ –ø–æ—Å–ª–µ —Ç–æ–ø-10 —Å–ø–∏—Å–∫–∞

    start.logging.info('–§–æ—Ä–º–∏—Ä—É—é—Ç—Å—è –ø–æ—Å—Ç–µ—Ä—ã —Å —Ä–µ–π—Ç–∏–Ω–≥–æ–º...')

    # –î–∞–Ω–Ω—ã–µ –æ—Ç get_leaders_data_list –∏ —Ä–∞–∑–º–µ—â–∞–µ–º –∏—Ö –Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–∏
    for place, sportsmen in enumerate(list_data_leaders[:26]):

        # –ï—Å–ª–∏ —Å–∏–º–≤–æ–ª—ã –≤ –∏–º–µ–Ω–∏ (—Å—Ç—Ä–æ–∫–µ) —Å–ø–æ—Ä—Ç—Å–º–µ–Ω–∞ –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è —à—Ä–∏—Ñ—Ç–æ–º –∑–∞–º–µ–Ω—è–µ–º –Ω–∞ —à—Ä–∏—Ñ—Ç, –∫–æ—Ç–æ—Ä—ã–π —ç—Ç–æ —É–º–µ–µ—Ç
        if char_in_font(sportsmen.get('name')[:1], TTFont(ubuntu_font)):
            font = ImageFont.truetype(symbol_font, size=26)
        else:
            font = ImageFont.truetype(ubuntu_font, size=30)

        # –ê–≤–∞—Ç–∞—Ä–∫—É —Å–ø–æ—Ä—Ç—Å–º–µ–Ω–∞ —É–º–µ–Ω—å—à–∞–µ–º –¥–æ –Ω—É–∂–Ω—ã—Ö —Ä–∞–∑–º–µ—Ä–æ–≤
        avatar = Image.open(urlopen(sportsmen.get('avatar_medium'))).convert('RGBA').resize((60, 60))
        avatar_top_3 = Image.open(urlopen(sportsmen.get('avatar_large'))).convert('RGBA').resize((124, 124))

        # –î–µ–ª–∞–µ–º –∞–≤–∞—Ç–∞—Ä–∫–∏ –∫—Ä—É–≥–ª—ã–º–∏
        crop_to_circle(avatar)
        crop_to_circle(avatar_top_3)

        # –§–æ—Ä–º–∏—Ä—É–µ–º –ø–µ—Ä–≤—ã–π —Å–ø–∏—Å–æ–∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ, –¢–û–ü10
        if place <= 9:
            if place <= 2:
                coordinate = ()
                if place == 0:  # –ü–µ—Ä–≤–æ–µ –º–µ—Å—Ç–æ
                    coordinate = (258, 28)
                elif place == 1:  # –í—Ç–æ—Ä–æ–µ –º–µ—Å—Ç–æ
                    coordinate = (130, 55)
                elif place == 2:  # –¢—Ä–µ—Ç—å–µ –º–µ—Å—Ç–æ
                    coordinate = (385, 60)
                out.paste(avatar_top_3, coordinate, avatar_top_3)

            out.paste(avatar, (60, shift), avatar)
            emoji_text.text((20, shift + 20),
                            f"{sportsmen.get('rank')}.",
                            font=ImageFont.truetype(ubuntu_font, size=30),
                            fill='#1b0f13'
                            )

            emoji_text.text((140, shift + 20),
                            f"{sportsmen.get('name')} üî∏ {sportsmen.get('distance')}",
                            font=font,
                            fill='#1b0f13'
                            )
            shift += 62
        # –§–æ—Ä–º–∏—Ä—É–µ–º –ø–µ—Ä–≤—ã–π —Å–ø–∏—Å–æ–∫ –∏–∑–æ–±–æ—Ä–∞–∂–µ–Ω–∏–µ, –≤—Å–µ –æ—Å—Ç–∞–ª—å–Ω—ã–µ
        else:
            out2.paste(avatar, (60, shift_2), avatar)
            emoji_text2.text((20, shift_2 + 20),
                             f"{sportsmen.get('rank')}.",
                             font=ImageFont.truetype(ubuntu_font, size=30),
                             fill='#1b0f13'
                             )

            emoji_text2.text((140, shift_2 + 20),
                             f"{sportsmen.get('name')} üî∏ {sportsmen.get('distance')}",
                             font=font,
                             fill='#1b0f13'
                             )
            shift_2 += 62
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ–∑–¥–∞–Ω–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏ –∑–∞–∫—Ä—ã–≤–∞–µ–º
    out.save(os.path.join(start.BASE_DIR, 'images/out/out1.png'), 'PNG')
    out.close()
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ–∑–¥–∞–Ω–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏ –∑–∞–∫—Ä—ã–≤–∞–µ–º
    out2.save(os.path.join(start.BASE_DIR, 'images/out/out2.png'), 'PNG')
    out2.close()
    start.logging.info('–ü–æ—Å—Ç–µ—Ä—ã –≥–æ—Ç–æ–≤—ã –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã')
